{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jessi\\\\Desktop\\\\dynamic-web-midterm\\\\dynamic-web-midterm\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Desktop\\\\dynamic-web-midterm\\\\dynamic-web-midterm\\\\src\\\\containers\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport makeupData from '../../makeupInfo.js'; //import brandAssessment from '../../components/brandAssessment/index.js';\n//import adoptionPrompt from '../../components/adoptionPrompt/index.js';\n//import '../../ldHigmVe_orgs_1.json.parse';\n\nfunction Home(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        brand = _useState2[0],\n        setBrand = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cf = _useState4[0],\n        setCF = _useState4[1];\n\n  const arr = [];\n\n  function queryCompanies(queryName) {\n    var name = \"\";\n\n    for (var i = 0; i < 51; i++) {\n      name = queryName[i].brand;\n\n      if (!(name in arr)) {\n        arr.push(name);\n      }\n    }\n  }\n\n  useEffect(() => {\n    queryCompanies(makeupData);\n  }, [brand]);\n  console.log(brand);\n  console.log(arr);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, makeupData.map((brand, i) => React.createElement(\"div\", {\n    key: brand.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, brand.brand, \", \", brand.id))));\n}\n\nexport default Home;\n/*\r\nuseEffect(() => {\r\n  let getBrandName = makeupData.brand;\r\n  let getCFvalue = makeupData.tag_list;\r\n  setBrand(getBrandName);\r\n  setCF(getCFvalue);\r\n}, [brand]);\r\n\r\n\r\n\r\n\r\nfunction Home(props){\r\n  const [brand, setBrand] = useState({});\r\n  const [cf,setCF] = useState('');\r\n  const arr = []\r\n  return (\r\n    <div>\r\n        {makeupData.map((brand, i) => (\r\n          <div key={brand.id}>\r\n            <h1>{brand.brand}, {brand.id}</h1>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Home\r\n*/","map":{"version":3,"sources":["C:/Users/jessi/Desktop/dynamic-web-midterm/dynamic-web-midterm/src/containers/Home/index.js"],"names":["React","useEffect","useState","makeupData","Home","props","brand","setBrand","cf","setCF","arr","queryCompanies","queryName","name","i","push","console","log","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB,C,CAEA;AACA;AACA;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBACQH,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACXI,KADW;AAAA,QACJC,QADI;;AAAA,qBAECL,QAAQ,CAAC,EAAD,CAFT;AAAA;AAAA,QAEXM,EAFW;AAAA,QAERC,KAFQ;;AAGlB,QAAMC,GAAG,GAAG,EAAZ;;AACA,WAASC,cAAT,CAAwBC,SAAxB,EAAkC;AAChC,QAAIC,IAAI,GAAG,EAAX;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,MAAAA,IAAI,GAAGD,SAAS,CAACE,CAAD,CAAT,CAAaR,KAApB;;AACA,UAAI,EAAEO,IAAI,IAAIH,GAAV,CAAJ,EAAmB;AACjBA,QAAAA,GAAG,CAACK,IAAJ,CAASF,IAAT;AACD;AACF;AACF;;AACDZ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,cAAc,CAACR,UAAD,CAAd;AACD,GAFQ,EAEP,CAACG,KAAD,CAFO,CAAT;AAGFU,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,UAAU,CAACe,GAAX,CAAe,CAACZ,KAAD,EAAQQ,CAAR,KACd;AAAK,IAAA,GAAG,EAAER,KAAK,CAACa,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKb,KAAK,CAACA,KAAX,QAAoBA,KAAK,CAACa,EAA1B,CADF,CADD,CADL,CADF;AASD;;AACD,eAAef,IAAf;AAGA","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport makeupData from '../../makeupInfo.js';\r\n\r\n//import brandAssessment from '../../components/brandAssessment/index.js';\r\n//import adoptionPrompt from '../../components/adoptionPrompt/index.js';\r\n//import '../../ldHigmVe_orgs_1.json.parse';\r\n\r\n\r\nfunction Home(props){\r\n  const [brand, setBrand] = useState({});\r\n  const [cf,setCF] = useState('');\r\n  const arr = []\r\n  function queryCompanies(queryName){\r\n    var name = \"\";\r\n    for(var i = 0; i < 51; i++) {\r\n      name = queryName[i].brand;\r\n      if (!(name in arr)){\r\n        arr.push(name);\r\n      }\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    queryCompanies(makeupData);\r\n  },[brand]);\r\nconsole.log(brand);\r\n\r\nconsole.log(arr);\r\n  return (\r\n    <div>\r\n        {makeupData.map((brand, i) => (\r\n          <div key={brand.id}>\r\n            <h1>{brand.brand}, {brand.id}</h1>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Home\r\n\r\n\r\n/*\r\nuseEffect(() => {\r\n  let getBrandName = makeupData.brand;\r\n  let getCFvalue = makeupData.tag_list;\r\n  setBrand(getBrandName);\r\n  setCF(getCFvalue);\r\n}, [brand]);\r\n\r\n\r\n\r\n\r\nfunction Home(props){\r\n  const [brand, setBrand] = useState({});\r\n  const [cf,setCF] = useState('');\r\n  const arr = []\r\n  return (\r\n    <div>\r\n        {makeupData.map((brand, i) => (\r\n          <div key={brand.id}>\r\n            <h1>{brand.brand}, {brand.id}</h1>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Home\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}